#!/command/with-contenv bashio
# shellcheck shell=bash
# ==============================================================================
# Init clickhouse-server - generate config from options
# ==============================================================================

set -e

bashio::log.info "Running init script..."

DATA_CONFIG="/data/config"
CLICKHOUSE_DATA="/data/clickhouse/data"
HASS_CONFIG="$DATA_CONFIG/clickhouse-server/config.d/hass.xml"

create_and_copy_dir() {
    local src=$1
    local dest=$2
    if [ ! -d "$dest" ]; then
        bashio::log.info "Creating directory $dest..."
        mkdir -p "$dest" || { bashio::log.error "Failed to create directory $dest"; exit 1; }
        cp -r "$src" "$dest" || { bashio::log.error "Failed to copy from $src to $dest"; exit 1; }
    fi
}

create_and_copy_dir "/opt/etc/clickhouse-server" "$DATA_CONFIG/clickhouse-server"
create_and_copy_dir "/opt/etc/clickhouse-client" "$DATA_CONFIG/clickhouse-client"

if [ ! -d "$CLICKHOUSE_DATA" ]; then
    bashio::log.info "Creating directory for clickhouse-server data..."
    mkdir -p "$CLICKHOUSE_DATA" || { bashio::log.error "Failed to create directory $CLICKHOUSE_DATA"; exit 1; }
fi

# prepare config
if [ ! -d "$DATA_CONFIG/clickhouse-server/config.d" ]; then
    mkdir -p "$DATA_CONFIG/clickhouse-server/config.d" || { bashio::log.error "Failed to create directory $DATA_CONFIG/clickhouse-server/config.d"; exit 1; }
fi

cat > "$HASS_CONFIG" <<EOF || { bashio::log.error "Failed to create $HASS_CONFIG"; exit 1; }
<?xml version="1.0" encoding="UTF-8"?>
<clickhouse>
    <logger>
        <level>$(bashio::config 'logger.level')</level>
        <log />
        <errorlog />
        <console>1</console>
    </logger>
    <path>$CLICKHOUSE_DATA</path>
    <tmp_path>$CLICKHOUSE_DATA/tmp/</tmp_path>
    <custom_cached_disks_base_directory>$CLICKHOUSE_DATA/caches/</custom_cached_disks_base_directory>
    <user_files_path>$CLICKHOUSE_DATA/user_files/</user_files_path>
    <format_schema_path>$CLICKHOUSE_DATA/format_schemas/</format_schema_path>
    <user_directories>
        <local_directory>
            <path>$CLICKHOUSE_DATA/access/</path>
        </local_directory>
    </user_directories>
    <listen_host>0.0.0.0</listen_host>
    <http_port>8124</http_port>
    <tcp_port>9000</tcp_port>
    <mysql_port>9004</mysql_port>
    <postgresql_port>9005</postgresql_port>
</clickhouse>
EOF

# Set ownership and permissions
chown -R clickhouse:clickhouse "$CLICKHOUSE_DATA"  || { bashio::log.error "Failed to set ownership for $CLICKHOUSE_DATA"; exit 1; }
chmod ugo+Xrw -R $CLICKHOUSE_DATA $DATA_CONFIG || { bashio::log.error "Failed to set permissions"; exit 1; }

bashio::log.info "Init script completed successfully!"

